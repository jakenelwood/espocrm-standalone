name: Validate Required Secrets

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
    paths:
      - '.github/workflows/validate-secrets.yml'
  schedule:
    # Run weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  validate-secrets:
    name: Validate Repository Secrets
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check Required Secrets
      id: check-secrets
      run: |
        echo "üîç Validating required secrets for deployment..."
        echo ""
        
        # Track validation status
        MISSING_SECRETS=""
        ALL_VALID=true
        
        # Function to check if a secret exists and is non-empty
        check_secret() {
          local SECRET_NAME=$1
          local SECRET_VALUE=$2
          local DESCRIPTION=$3
          
          if [ -z "$SECRET_VALUE" ]; then
            echo "‚ùå $SECRET_NAME - Missing or empty"
            echo "   Description: $DESCRIPTION"
            MISSING_SECRETS="${MISSING_SECRETS}${SECRET_NAME}, "
            ALL_VALID=false
          else
            # Check length to ensure it's not just whitespace
            if [ ${#SECRET_VALUE} -lt 10 ]; then
              echo "‚ö†Ô∏è  $SECRET_NAME - Configured but suspiciously short (${#SECRET_VALUE} chars)"
              echo "   Description: $DESCRIPTION"
            else
              echo "‚úÖ $SECRET_NAME - Configured (${#SECRET_VALUE} chars)"
            fi
          fi
        }
        
        echo "=== Production Deployment Secrets ==="
        check_secret "KUBECONFIG_PRODUCTION" \
          "${{ secrets.KUBECONFIG_PRODUCTION }}" \
          "Base64 encoded kubeconfig for k3s cluster access"
        
        echo ""
        echo "=== Optional Staging Secrets ==="
        check_secret "KUBECONFIG_STAGING" \
          "${{ secrets.KUBECONFIG_STAGING }}" \
          "Base64 encoded kubeconfig for staging environment (optional)"
        
        echo ""
        echo "=== GitHub Token (Auto-configured) ==="
        check_secret "GITHUB_TOKEN" \
          "${{ secrets.GITHUB_TOKEN }}" \
          "Automatically provided by GitHub Actions"
        
        # Summary
        echo ""
        echo "======================================="
        if [ "$ALL_VALID" = true ]; then
          echo "‚úÖ All required secrets are configured!"
          echo "Your CI/CD pipeline is ready for deployment."
        else
          echo "‚ùå Missing required secrets!"
          echo ""
          echo "To fix this issue:"
          echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "2. Add the missing secrets listed above"
          echo ""
          echo "For detailed instructions, see:"
          echo "- docs/cicd-auto-deployment-setup.md"
          echo "- docs/deployment-failure-fix-kubeconfig-secret.md"
          echo ""
          echo "Missing: ${MISSING_SECRETS%, }"
          exit 1
        fi
    
    - name: Validate KUBECONFIG_PRODUCTION Content
      if: success()
      run: |
        echo "üîê Validating KUBECONFIG_PRODUCTION secret content..."
        
        # Try to decode the base64
        echo "${{ secrets.KUBECONFIG_PRODUCTION }}" | base64 -d > /tmp/kubeconfig 2>/dev/null
        if [ $? -ne 0 ]; then
          echo "‚ùå KUBECONFIG_PRODUCTION is not valid base64!"
          echo "Please ensure you encoded it with: base64 -w0 < your-kubeconfig.yaml"
          exit 1
        fi
        
        # Check if it's valid YAML
        if ! grep -q "apiVersion:" /tmp/kubeconfig; then
          echo "‚ùå KUBECONFIG_PRODUCTION doesn't appear to be a valid kubeconfig!"
          echo "It should start with 'apiVersion: v1'"
          exit 1
        fi
        
        # Check for required fields
        REQUIRED_FIELDS=("clusters:" "users:" "contexts:" "current-context:")
        for field in "${REQUIRED_FIELDS[@]}"; do
          if ! grep -q "$field" /tmp/kubeconfig; then
            echo "‚ö†Ô∏è  Warning: KUBECONFIG_PRODUCTION may be missing $field"
          fi
        done
        
        # Extract cluster info (without exposing sensitive data)
        CLUSTER_COUNT=$(grep -c "cluster:" /tmp/kubeconfig || echo 0)
        USER_COUNT=$(grep -c "user:" /tmp/kubeconfig || echo 0)
        
        echo "‚úÖ KUBECONFIG_PRODUCTION is valid!"
        echo "   - Clusters configured: $CLUSTER_COUNT"
        echo "   - Users configured: $USER_COUNT"
        
        # Clean up
        rm -f /tmp/kubeconfig
    
    - name: Test Cluster Connectivity (Optional)
      if: success()
      continue-on-error: true
      run: |
        echo "üåê Testing cluster connectivity..."
        echo "(This step may fail if running outside the cluster network)"
        
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Configure kubeconfig
        echo "${{ secrets.KUBECONFIG_PRODUCTION }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        
        # Try to connect (may fail due to network restrictions)
        if kubectl cluster-info 2>/dev/null; then
          echo "‚úÖ Successfully connected to cluster!"
          kubectl get nodes --no-headers | wc -l | xargs echo "   - Nodes in cluster:"
          kubectl get ns --no-headers | wc -l | xargs echo "   - Namespaces:"
        else
          echo "‚ö†Ô∏è  Could not connect to cluster (this is normal from GitHub Actions)"
          echo "   The kubeconfig appears valid but the cluster may not be accessible from here"
        fi
        
        # Clean up
        rm -f kubeconfig
    
    - name: Create Summary Report
      if: always()
      run: |
        echo "## Secret Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "### ‚úÖ All Secrets Valid" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your repository is properly configured for deployment!" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ‚ùå Secret Configuration Issues" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the job logs for details and follow the instructions to fix any issues." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[Configure Secrets](https://github.com/${{ github.repository }}/settings/secrets/actions)" >> $GITHUB_STEP_SUMMARY
        fi